"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PROVIDERS = exports.CLOUD_PROVIDERS = void 0;
const utils_1 = require("./utils");
var CLOUD_PROVIDERS;
(function (CLOUD_PROVIDERS) {
    CLOUD_PROVIDERS["GCP"] = "GCP";
    CLOUD_PROVIDERS["WASABI"] = "WASABI";
    CLOUD_PROVIDERS["AWS"] = "AWS";
    CLOUD_PROVIDERS["CONTABO"] = "CONTABO";
    CLOUD_PROVIDERS["DO"] = "DO";
    CLOUD_PROVIDERS["MINIO"] = "MINIO";
    CLOUD_PROVIDERS["R2"] = "R2";
})(CLOUD_PROVIDERS = exports.CLOUD_PROVIDERS || (exports.CLOUD_PROVIDERS = {}));
/**
 * Please submit a new issue if you need another s3 compatible provider.
 */
exports.PROVIDERS = {
    "GCP": {
        host: ({ bucket }) => `${bucket}.storage.googleapis.com`,
        url: ({ bucket, filename, directory }) => `https://${bucket}.storage.googleapis.com/${(0, utils_1.resolvePath)({ filename, directory })}`,
        res: ({ bucket, filename, directory }) => `https://storage.googleapis.com/${bucket}/${(0, utils_1.resolvePath)({ filename, directory })}`
    },
    "AWS": {
        host: ({ bucket }) => `${bucket}.s3.amazonaws.com`,
        url: ({ bucket, filename, directory }) => `https://${bucket}.s3.amazonaws.com/${(0, utils_1.resolvePath)({ filename, directory })}`,
        res: ({ bucket, filename, directory, region }) => `https://${bucket}.s3.${region}.amazonaws.com/${(0, utils_1.resolvePath)({ filename, directory })}`
    },
    "WASABI": {
        host: ({ region, bucket }) => `${bucket}.s3.${region}.wasabisys.com`,
        url: ({ region, filename, directory, bucket }) => `https://${bucket}.s3.${region}.wasabisys.com/${(0, utils_1.resolvePath)({ filename, directory })}`,
        res: ({ bucket, filename, directory, region }) => `https://s3.${region}.wasabisys.com/${bucket}/${(0, utils_1.resolvePath)({ filename, directory })}`
    },
    "DO": {
        host: ({ region, bucket }) => `${bucket}.${region}.digitaloceanspaces.com`,
        url: ({ bucket, filename, directory, region }) => `https://${bucket}.${region}.digitaloceanspaces.com/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`,
        res: ({ bucket, filename, directory, region }) => `https://${bucket}.${region}.digitaloceanspaces.com/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`
    },
    "CONTABO": {
        host: ({ region }) => `${region}.contabostorage.com`,
        url: ({ bucket, filename, directory, region }) => `https://${region}.contabostorage.com/${(0, utils_1.resolvePath)({ filename, directory: `${bucket}${directory}` })}`,
        res: ({ bucket, filename, directory, region }) => `https://${region}.contabostorage.com/${(0, utils_1.resolvePath)({ filename, directory: `${bucket}${directory}` })}`
    },
    "MINIO": {
        host: ({ host }) => `${host}`,
        url: ({ bucket, filename, directory, host }) => `${host}/${bucket}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`,
        res: ({ bucket, filename, directory, host }) => `${host}/${bucket}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`
    },
    "SUPABASE": {
        host: ({ host }) => `${host}`,
        url: ({ bucket, filename, directory, host }) => `${host}/storage/v1/s3/${bucket}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`,
        res: ({ bucket, filename, directory, host }) => `${host}/storage/v1/s3/${bucket}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`
    },
    "R2": {
        host: ({ host, bucket }) => `https://${bucket}.${host.replace('https://', "")}`,
        url: ({ bucket, filename, directory, host }) => `https://${bucket}.${host.replace('https://', "")}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`,
        res: ({ bucket, filename, directory, host }) => `https://${bucket}.${host.replace('https://', "")}/${(0, utils_1.resolvePath)({ filename, directory: `${directory}` })}`
    }
};
